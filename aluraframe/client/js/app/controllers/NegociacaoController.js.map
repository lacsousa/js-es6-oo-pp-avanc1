{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","NegociacoesView","MensagemView","NegociacaoService","DateHelper","Bind","Negociacao","NegociacaoController","_ordemAtual","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_service","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","importa","console","log","value","focus","textoParaData","parseInt","parseFloat","apaga","esvazia","coluna","inverteOrdem","ordena","a","b","negociacaoController","currentInstance"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import {ListaNegociacoes} from '../models/ListaNegociacoes';\nimport {Mensagem} from '../models/Mensagem';\nimport {NegociacoesView} from '../views/NegociacoesView';\nimport {MensagemView} from '../views/MensagemView';\nimport {NegociacaoService} from '../services/NegociacaoService';\nimport {DateHelper} from '../helpers/DateHelper';\nimport {Bind} from '../helpers/Bind';\nimport {Negociacao} from '../models/Negociacao';\n\n\nclass NegociacaoController {\n\n    constructor() {\n\n        this._ordemAtual = ''; // quando a página for carregada, não tem critério. Só passa a ter quando ele começa a clicar nas colunas\n\n        let $ = document.querySelector.bind(document);\n        // Forma de implementar um micro Framework\n        // Como no jQuery\n        this._inputData = $('#data');\n        this._inputQuantidade = $('#quantidade');\n        this._inputValor = $('#valor');\n\n        /* Começar a trabalhar com o Proxy\n        this._listaNegociacoes = new ListaNegociacoes(model => {\n            console.log(this); // Quando trocamos o function pelo arrow function (AF)=>\n                                // Ele mantém o this. Pq numa AF o o escopo de this \n                                // é léxico, em vez de ser dinâmico como a outra função\n            this._negociacoesView.update(model);\n        });   */\n\n        this._listaNegociacoes = new Bind(\n            new ListaNegociacoes(),\n            new NegociacoesView($('#negociacoesView')),\n            'adiciona', 'esvazia', 'ordena', 'inverteOrdem');\n\n        // primeiro update\n        // Retirado no Cap. 3.3. ----->   this._negociacoesView.update(this._listaNegociacoes);\n        // a estratégia de mudar de let ( variáveis) para o this\n        // reduz o acesso ao DOM a apenas 1 vez, mesmo que ocorram \n        // 5000 negociações  \n\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView($('#mensagemView')),\n            'texto');\n\n        this._service = new NegociacaoService();\n        this._init();    \n\n    }\n\n    _init(){\n\n        this._service\n        .lista()\n        .then(negociacoes =>\n            negociacoes.forEach(negociacao =>\n                this._listaNegociacoes.adiciona(negociacao)))\n        .catch(erro => this._mensagem.texto = erro);        \n\n\n        setInterval(() => {\n            this.importaNegociacoes();\n        }, 4000);\n    }\n\n    adiciona(event) {\n        event.preventDefault();\n        \n        let negociacao = this._criaNegociacao();\n\n        new NegociacaoService()\n            .cadastra(negociacao)\n            .then( mensagem => {\n                    this._listaNegociacoes.adiciona(negociacao);\n                    this._mensagem.texto = mensagem;\n                    this._limpaFormulario();\n                    })\n            .catch(erro => this._mensagem.texto = erro);\n    }\n    \n    //let data = DateHelper.textoParaData(this._inputData.value);\n\n    /*\n            split('-')\n                // Arrow function \n                // Vc retira o function e se vc só tiver 1 linha no bloco\n                // vc pode reduzir mais ainda \n                .map((item, indice) => item - indice % 2 ));\n            // Tudo isso. porque o mês nesse Date\n            // inicia com 0 ( Janeiro )\n            console.log(data);\n    */\n    // let negociacao = new Negociacao(data,\n    // this._inputQuantidade.value, this._inputValor.value);\n\n    // Cap.04.06 \n    // this._listaNegociacoes.negociacoes.length = 0;\n    // this._listaNegociacoes.negociacoes.push(this._criaNegociacao);\n\n    // Depois de criada a armadilha vamos comentar o update aqui\n    // this._negociacoesView.update(this._listaNegociacoes);\n\n    // this._mensagem.texto = \"Negociação adiconada com sucesso!\";\n    // this._limpaFormulario();\n    // console.log(this._listaNegociacoes.negociacoes);\n    // console.log(DateHelper.dataParaTexto(negociacao.data));\n\n    /*\n        .map( (item, indice) function {\n            return item - indice % 2;\n        }));\n    */\n\n    importaNegociacoes() {\n        // Trabalhando com o Promise\n        this._service\n            .importa(this._listaNegociacoes.negociacoes)\n            //Se vc tivesse colocado um Bloco { } vc teria que explicitar um \"return\" \n            // para os dados irem para o bloco abaixo\n            .then(negociacoes => {\n                negociacoes\n                    // .reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\n                    .forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n                this._mensagem.texto = 'Negociações importadas com sucesso';\n                console.log(negociacoes);\n            }).catch(erro => this._mensagem.texto = erro);\n\n        /* 2a. REFATORAÇÃO acima\n        service.obterNegociacoesDaSemana()\n            .then(negociacoes => {\n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n                this._mensagem.texto = 'Negociações da semana obtidas com sucesso!';\n            })\n            .catch(erro => this._mensagem.texto = erro);\n\n        service.obterNegociacoesDaSemanaAnterior()\n            .then(negociacoes => {\n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n                this._mensagem.texto = 'Negociações da semana obtidas com sucesso!';\n            })\n            .catch(erro => this._mensagem.texto = erro);\n\n        service.obterNegociacoesDaSemanaRetrasada()\n            .then(negociacoes => {\n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n                this._mensagem.texto = 'Negociações da semana obtidas com sucesso!';\n            })\n            .catch(erro => this._mensagem.texto = erro);\n        */\n\n        /* \n        //Error-First-Callback\n        service.obterNegociacoesDaSemana((erro, negociacoes) => {\n            if(erro){\n                this._mensagem.texto = erro;\n                return;\n            }\n            negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n\n            service.obterNegociacoesDaSemanaAnterior((erro, negociacoes) => {\n                if(erro){\n                    this._mensagem.texto = erro;\n                    return;\n                }\n                negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n\n                service.obterNegociacoesDaSemanaRetrasada((erro, negociacoes) => {\n                    if(erro){\n                        this._mensagem.texto = erro;\n                        return;\n                    }\n                    negociacoes.forEach(negociacao => this._listaNegociacoes.adiciona(negociacao));\n                    this._mensagem.texto = 'Negociações Semana importadas com sucesso!';\n                });\n            });\n        });\n        */\n    }\n\n    _limpaFormulario() {\n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0;\n\n        this._inputData.focus();\n    }\n\n    _criaNegociacao() {\n        return new Negociacao(\n            DateHelper.textoParaData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value));\n    }\n\n    apaga() {\n\n        this._service\n            .apaga()\n            .then(mensagem => {\n                this._listaNegociacoes.esvazia();\n                //    this._negociacoesView.update(this._listaNegociacoes);\n                this._mensagem.texto = mensagem;\n            });\n\n        \n    }\n\n    ordena(coluna) {\n        if (this._ordemAtual == coluna) {\n            this._listaNegociacoes.inverteOrdem();\n        } else {\n            this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\n        }\n        this._ordemAtual = coluna;\n    }\n}\n\n\nlet negociacaoController = new NegociacaoController();\n\nexport function currentInstance() {\n    return negociacaoController; // Singleton\n}\n"]}