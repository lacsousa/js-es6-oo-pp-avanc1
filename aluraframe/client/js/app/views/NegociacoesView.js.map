{"version":3,"sources":["../../app-es6/views/NegociacoesView.js"],"names":["NegociacoesView","elemento","model","negociacoes","map","DateHelper","dataParaTexto","n","data","quantidade","valor","volume","join","total","forEach","reduce","volumeTotal","View"],"mappings":";;;;AAAA;;;;;;;;IAEMA,e;;;AAEF,6BAAYC,QAAZ,EAAqB;AAAA;;AAAA,iIACXA,QADW;AAEpB;;;;iCAEQC,K,EAAO;AACZ;AACA;AACA,6lBAYcA,MAAMC,WAAN,CAAkBC,GAAlB,CAAsB,aAAK;AACzB;AACA;AACA,oGAEcC,WAAWC,aAAX,CAAyBC,EAAEC,IAA3B,CAFd,mDAGcD,EAAEE,UAHhB,mDAIcF,EAAEG,KAJhB,mDAKcH,EAAEI,MALhB;AAQH,aAXC,EAWCC,IAXD,CAWM,EAXN,CAZd,iKA6BiB,YAAW;;AAER,oBAAIC,QAAQ,CAAZ;AACAX,sBAAMC,WAAN,CAAkBW,OAAlB,CAA0B;AAAA,2BAAKD,SAAQN,EAAEI,MAAf;AAAA,iBAA1B;AACA,uBAAOE,KAAP;AACA;AACA;AACA;AACJ,aARA,EA7BhB,6DAwCmB;AACHX,kBAAMC,WAAN,CAAkBY,MAAlB,CAAyB,UAASF,KAAT,EAAeN,CAAf,EAAiB;AACtC,uBAAOM,QAAQN,EAAEI,MAAjB;AACH,aAFD,EAEG,GAFH,CAzChB;AAgDiB;AACDT,kBAAMc,WAjDtB;AAuDH;;;;EAhEyBC,W","file":"NegociacoesView.js","sourcesContent":["import {View} from './View';\n\nclass NegociacoesView extends View{ \n\n    constructor(elemento){\n        super(elemento);\n    }\n   \n    template(model) { \n        // Se o retorno não fosse uma template string, não poderíamos \"identar\" \n        // o código desta forma\n        return `\n            <table class=\"table table-hover table-bordered\">\n                <thead>\n                    <tr>\n                        <th onclick=\"negociacaoController.ordena('data')\">DATA</th>\n                        <th onclick=\"negociacaoController.ordena('quantidade')\">QUANTIDADE</th>\n                        <th onclick=\"negociacaoController.ordena('valor')\">VALOR</th>\n                        <th onclick=\"negociacaoController.ordena('volume')\">VOLUME</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    ${model.negociacoes.map(n => {\n                        // console.log(n);\n                        // return n;\n                        return `\n                            <tr>\n                                <td>${DateHelper.dataParaTexto(n.data)}</td>\n                                <td>${n.quantidade}</td>\n                                <td>${n.valor}</td>\n                                <td>${n.volume}</td>\n                            </tr>\n                        `\n                    }).join('')}\n                </tbody>\n\n                <tfoot>\n                    <td>Totais dos Volumes </br>(diferentes formas)</td>\n                    <td>${\n                        (function() {\n                \n                            let total = 0;\n                            model.negociacoes.forEach(n => total+= n.volume);\n                            return total;\n                            // Immediately-invoked function expression (IIFE)\n                            // A função imediata. Recurso usado na criação de escopo em JavaScript\n                            // Coloca um bloco na expressão, sendo executado imediatamente.\n                       })()\n                    }\n                    </td>\n                    <td>${ // De forma funcional\n                        model.negociacoes.reduce(function(total,n){\n                            return total + n.volume;\n                        }, 0.0)\n                    } \n                    </td>\n                    <td>\n                     ${\n                         //model.negociacoes.reduce((total,n) => total + n.volume, 0.0) \n                        model.volumeTotal\n                    }\n                    </td>\n\n                </tfoot>\n            </table>`;\n    }\n\n  \n}"]}