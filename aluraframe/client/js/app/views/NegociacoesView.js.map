{"version":3,"sources":["../../app-es6/views/NegociacoesView.js"],"names":["NegociacoesView","elemento","model","negociacoes","map","DateHelper","dataParaTexto","n","data","quantidade","valor","volume","join","total","forEach","reduce","volumeTotal","View"],"mappings":";;;;;;;;;;IAAMA,e;;;AAEF,6BAAYC,QAAZ,EAAqB;AAAA;;AAAA,iIACXA,QADW;AAEpB;;;;iCAEQC,K,EAAO;AACZ;AACA;AACA,6lBAYcA,MAAMC,WAAN,CAAkBC,GAAlB,CAAsB,aAAK;AACzB;AACA;AACA,oGAEcC,WAAWC,aAAX,CAAyBC,EAAEC,IAA3B,CAFd,mDAGcD,EAAEE,UAHhB,mDAIcF,EAAEG,KAJhB,mDAKcH,EAAEI,MALhB;AAQH,aAXC,EAWCC,IAXD,CAWM,EAXN,CAZd,iKA6BiB,YAAW;;AAER,oBAAIC,QAAQ,CAAZ;AACAX,sBAAMC,WAAN,CAAkBW,OAAlB,CAA0B;AAAA,2BAAKD,SAAQN,EAAEI,MAAf;AAAA,iBAA1B;AACA,uBAAOE,KAAP;AACA;AACA;AACA;AACJ,aARA,EA7BhB,6DAwCmB;AACHX,kBAAMC,WAAN,CAAkBY,MAAlB,CAAyB,UAASF,KAAT,EAAeN,CAAf,EAAiB;AACtC,uBAAOM,QAAQN,EAAEI,MAAjB;AACH,aAFD,EAEG,GAFH,CAzChB;AAgDiB;AACDT,kBAAMc,WAjDtB;AAuDH;;;;EAhEyBC,I","file":"NegociacoesView.js","sourcesContent":["class NegociacoesView extends View{ \r\n\r\n    constructor(elemento){\r\n        super(elemento);\r\n    }\r\n   \r\n    template(model) { \r\n        // Se o retorno não fosse uma template string, não poderíamos \"identar\" \r\n        // o código desta forma\r\n        return `\r\n            <table class=\"table table-hover table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th onclick=\"negociacaoController.ordena('data')\">DATA</th>\r\n                        <th onclick=\"negociacaoController.ordena('quantidade')\">QUANTIDADE</th>\r\n                        <th onclick=\"negociacaoController.ordena('valor')\">VALOR</th>\r\n                        <th onclick=\"negociacaoController.ordena('volume')\">VOLUME</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    ${model.negociacoes.map(n => {\r\n                        // console.log(n);\r\n                        // return n;\r\n                        return `\r\n                            <tr>\r\n                                <td>${DateHelper.dataParaTexto(n.data)}</td>\r\n                                <td>${n.quantidade}</td>\r\n                                <td>${n.valor}</td>\r\n                                <td>${n.volume}</td>\r\n                            </tr>\r\n                        `\r\n                    }).join('')}\r\n                </tbody>\r\n\r\n                <tfoot>\r\n                    <td>Totais dos Volumes </br>(diferentes formas)</td>\r\n                    <td>${\r\n                        (function() {\r\n                \r\n                            let total = 0;\r\n                            model.negociacoes.forEach(n => total+= n.volume);\r\n                            return total;\r\n                            // Immediately-invoked function expression (IIFE)\r\n                            // A função imediata. Recurso usado na criação de escopo em JavaScript\r\n                            // Coloca um bloco na expressão, sendo executado imediatamente.\r\n                       })()\r\n                    }\r\n                    </td>\r\n                    <td>${ // De forma funcional\r\n                        model.negociacoes.reduce(function(total,n){\r\n                            return total + n.volume;\r\n                        }, 0.0)\r\n                    } \r\n                    </td>\r\n                    <td>\r\n                     ${\r\n                         //model.negociacoes.reduce((total,n) => total + n.volume, 0.0) \r\n                        model.volumeTotal\r\n                    }\r\n                    </td>\r\n\r\n                </tfoot>\r\n            </table>`;\r\n    }\r\n\r\n  \r\n}"]}