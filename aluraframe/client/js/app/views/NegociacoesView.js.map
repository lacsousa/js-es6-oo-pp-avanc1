{"version":3,"sources":["../../app-es6/views/NegociacoesView.js"],"names":["View","DateHelper","currentInstance","NegociacoesView","elemento","addEventListener","event","target","nodeName","ordena","textContent","toLowerCase","model","negociacoes","map","dataParaTexto","n","data","quantidade","valor","volume","join","total","forEach","reduce","volumeTotal"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,gB,UAAAA,I;;AACAC,sB,sBAAAA,U;;AACAC,2B,oCAAAA,e;;;;;;;;;;;;;;;;;;;;;uCAEKC,e;;;AAET,yCAAYC,QAAZ,EAAsB;AAAA;;AAAA,kJAEZA,QAFY;;AAIlBA,6BAASC,gBAAT,CAA0B,OAA1B,EAAmC,UAASC,KAAT,EAAgB;;AAE/C,4BAAGA,MAAMC,MAAN,CAAaC,QAAb,IAAyB,IAA5B,EAAkC;;AAE9BN,8CAAkBO,MAAlB,CAAyBH,MAAMC,MAAN,CAAaG,WAAb,CAAyBC,WAAzB,EAAzB;AACH;AACF,qBANH;AAJkB;AAWrB;;;;6CAEQC,K,EAAO;AACZ;AACA;AACA,ymBAYcA,MAAMC,WAAN,CAAkBC,GAAlB,CAAsB,aAAK;AACzB;AACA;AACA,gHAEcb,WAAWc,aAAX,CAAyBC,EAAEC,IAA3B,CAFd,mDAGcD,EAAEE,UAHhB,mDAIcF,EAAEG,KAJhB,mDAKcH,EAAEI,MALhB;AAQH,yBAXC,EAWCC,IAXD,CAWM,EAXN,CAZd,iKA6BiB,YAAW;;AAER,gCAAIC,QAAQ,CAAZ;AACAV,kCAAMC,WAAN,CAAkBU,OAAlB,CAA0B;AAAA,uCAAKD,SAAQN,EAAEI,MAAf;AAAA,6BAA1B;AACA,mCAAOE,KAAP;AACA;AACA;AACA;AACJ,yBARA,EA7BhB,6DAwCmB;AACHV,8BAAMC,WAAN,CAAkBW,MAAlB,CAAyB,UAASF,KAAT,EAAeN,CAAf,EAAiB;AACtC,mCAAOM,QAAQN,EAAEI,MAAjB;AACH,yBAFD,EAEG,GAFH,CAzChB;AAgDiB;AACDR,8BAAMa,WAjDtB;AAuDH;;;;cAzEgCzB,I","file":"NegociacoesView.js","sourcesContent":["import {View} from './View';\r\nimport {DateHelper} from '../helpers/DateHelper';\r\nimport {currentInstance} from '../controllers/NegociacaoController';\r\n\r\nexport class NegociacoesView extends View{ \r\n\r\n    constructor(elemento) {\r\n\r\n        super(elemento);\r\n\r\n        elemento.addEventListener('click', function(event) {\r\n\r\n            if(event.target.nodeName == 'TH') {\r\n\r\n                currentInstance().ordena(event.target.textContent.toLowerCase());\r\n            }\r\n          });\r\n    }\r\n   \r\n    template(model) { \r\n        // Se o retorno não fosse uma template string, não poderíamos \"identar\" \r\n        // o código desta forma\r\n        return `\r\n            <table class=\"table table-hover table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th onclick=\"negociacaoController.ordena('data')\">DATA</th>\r\n                        <th onclick=\"negociacaoController.ordena('quantidade')\">QUANTIDADE</th>\r\n                        <th onclick=\"negociacaoController.ordena('valor')\">VALOR</th>\r\n                        <th onclick=\"negociacaoController.ordena('volume')\">VOLUME</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    ${model.negociacoes.map(n => {\r\n                        // console.log(n);\r\n                        // return n;\r\n                        return `\r\n                            <tr>\r\n                                <td>${DateHelper.dataParaTexto(n.data)}</td>\r\n                                <td>${n.quantidade}</td>\r\n                                <td>${n.valor}</td>\r\n                                <td>${n.volume}</td>\r\n                            </tr>\r\n                        `\r\n                    }).join('')}\r\n                </tbody>\r\n\r\n                <tfoot>\r\n                    <td>Totais dos Volumes </br>(diferentes formas)</td>\r\n                    <td>${\r\n                        (function() {\r\n                \r\n                            let total = 0;\r\n                            model.negociacoes.forEach(n => total+= n.volume);\r\n                            return total;\r\n                            // Immediately-invoked function expression (IIFE)\r\n                            // A função imediata. Recurso usado na criação de escopo em JavaScript\r\n                            // Coloca um bloco na expressão, sendo executado imediatamente.\r\n                       })()\r\n                    }\r\n                    </td>\r\n                    <td>${ // De forma funcional\r\n                        model.negociacoes.reduce(function(total,n){\r\n                            return total + n.volume;\r\n                        }, 0.0)\r\n                    } \r\n                    </td>\r\n                    <td>\r\n                     ${\r\n                         //model.negociacoes.reduce((total,n) => total + n.volume, 0.0) \r\n                        model.volumeTotal\r\n                    }\r\n                    </td>\r\n\r\n                </tfoot>\r\n            </table>`;\r\n    }\r\n\r\n  \r\n}"]}