{"version":3,"sources":["../../app-es6/services/HttpService.SEM-Fetch.js"],"names":["HttpService","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","responseText","console","log","send","dado","setRequestHeader","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACMA,uB;;;;;;;wCAEEC,G,EAAK;;AAEL,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACnC;AACD;AACA,gCAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,gCAAIE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB;;AAEA;AACAI,gCAAIG,kBAAJ,GAAyB,YAAM;AAC1B;AACD;AACA,oCAAGH,IAAII,UAAJ,IAAkB,CAArB,EAAwB;AACpB,wCAAGJ,IAAIK,MAAJ,IAAc,GAAjB,EAAsB;AAClB;AACA;AACA;AACAP,gDAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR;;AAEE;AACF;AACH,qCARD,MAQK;AACDC,gDAAQC,GAAR,CAAYV,IAAIQ,YAAhB;AACAT,+CAAOC,IAAIQ,YAAX;AACH;AACJ;AACJ,6BAjBD;;AAmBAR,gCAAIW,IAAJ;AACA;;;;;;;AAOH,yBAlCM,CAAP;AAoCH;;;yCAGIf,G,EAAKgB,I,EAAM;;AAEZ,+BAAO,IAAIf,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,gCAAIE,IAAJ,CAAS,MAAT,EAAiBN,GAAjB,EAAsB,IAAtB;AACAI,gCAAIa,gBAAJ,CAAqB,cAArB,EAAqC,kBAArC;AACAb,gCAAIG,kBAAJ,GAAyB,YAAM;;AAE3B,oCAAIH,IAAII,UAAJ,IAAkB,CAAtB,EAAyB;AACrB,wCAAIJ,IAAIK,MAAJ,IAAc,GAAlB,EAAuB;AACnBP,gDAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR;AACH,qCAFD,MAEO;AACHT,+CAAOC,IAAIQ,YAAX;AACH;AACJ;AACJ,6BATD;AAUAR,gCAAIW,IAAJ,CAASL,KAAKQ,SAAL,CAAeF,IAAf,CAAT,EAfoC,CAeJ;AACnC,yBAhBM,CAAP;AAkBH","file":"HttpService.SEM-Fetch.js","sourcesContent":["\nclass HttpService {\n\n    get(url) {\n\n        return new Promise((resolve, reject) => {\n             //    alert('Importando negociações');\n            //Não estamos usando jQuery, usaremos JS Puro\n            let xhr = new XMLHttpRequest();\n            xhr.open('GET', url);\n\n            // Configurações\n            xhr.onreadystatechange = () => {\n                 // Precisa testar o status 200 \n                // Porque um erro é uma resposta válida\n                if(xhr.readyState == 4) {\n                    if(xhr.status == 200) {\n                        // JSON.parse - converte Texto num Objeto JS  \n                        // Para cada objeto converte para um instancia de negociacao\n                        // No novo array ( map ) vc percorre e adiciona \n                        resolve(JSON.parse(xhr.responseText));\n\n                          // O Service não deve ter contato com a View\n                        // this._mensagem.texto = 'Negociações importadas da semana'; \n                    }else{\n                        console.log(xhr.responseText);\n                        reject(xhr.responseText);\n                    }\n                }\n            };\n\n            xhr.send();\n            /* Estados Possíveis de uma requisição AJAX\n                0: requisição ainda não iniciada\n                1: conexão com o servidor estabelecida\n                2: requisição recebida\n                3: processando requisição\n                4: requisição está concluída e a resposta está pronta\n            */\n        });\n\n    }\n\n\n    post(url, dado) {\n\n        return new Promise((resolve, reject) => {\n\n            let xhr = new XMLHttpRequest();\n            xhr.open(\"POST\", url, true);\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\n            xhr.onreadystatechange = () => {\n\n                if (xhr.readyState == 4) {\n                    if (xhr.status == 200) {\n                        resolve(JSON.parse(xhr.responseText));\n                    } else {\n                        reject(xhr.responseText);\n                    }\n                }\n            };\n            xhr.send(JSON.stringify(dado)); // usando JSON.stringifly para converter objeto em uma string no formato JSON.\n        });\n\n    }\n}"]}