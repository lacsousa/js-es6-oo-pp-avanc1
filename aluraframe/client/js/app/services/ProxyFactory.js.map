{"version":3,"sources":["../../app-es6/services/ProxyFactory.js"],"names":["ProxyFactory","objeto","props","acao","Proxy","get","target","prop","receiver","includes","_ehFuncao","console","log","retorno","Reflect","apply","arguments","set","value","func","Function"],"mappings":";;;;;;;;IAAMA,Y;;;;;;;+BAEYC,M,EAAQC,K,EAAOC,I,EAAM;;AAE/B,mBAAO,IAAIC,KAAJ,CAAUH,MAAV,EAAkB;;AAErBI,qBAAK,aAAUC,MAAV,EAAkBC,IAAlB,EAAwBC,QAAxB,EAAkC;;AAEnC,wBAAIN,MAAMO,QAAN,CAAeF,IAAf,KAAwBP,aAAaU,SAAb,CAAuBJ,OAAOC,IAAP,CAAvB,CAA5B,EAAkE;;AAE9D;AACA,+BAAO,YAAY;AACf;AACA;AACAI,oCAAQC,GAAR,sBAA8BL,IAA9B;AACA,gCAAIM,UAAUC,QAAQC,KAAR,CAAcT,OAAOC,IAAP,CAAd,EAA4BD,MAA5B,EAAoCU,SAApC,CAAd;AACAb,iCAAKG,MAAL;AACA,mCAAOO,OAAP;AACH,yBAPD;AAQH;AACD,2BAAOC,QAAQT,GAAR,CAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,QAA1B,CAAP;AACH,iBAjBoB;;AAmBrBS,mBAnBqB,eAmBjBX,MAnBiB,EAmBTC,IAnBS,EAmBHW,KAnBG,EAmBIV,QAnBJ,EAmBa;;AAE9B,wBAAIK,UAAUC,QAAQG,GAAR,CAAYX,MAAZ,EAAoBC,IAApB,EAA0BW,KAA1B,EAAiCV,QAAjC,CAAd;AACA,wBAAGN,MAAMO,QAAN,CAAeF,IAAf,CAAH,EAAwB;AACpB;AACAJ,6BAAKG,MAAL;AACH;;AAED,2BAAOO,OAAP;AACH;AA5BoB,aAAlB,CAAP;AA8BH;;;kCAEgBM,I,EAAM;AACnB,mBAAO,QAAOA,IAAP,yCAAOA,IAAP,cAAuBC,QAAvB,yCAAuBA,QAAvB,EAAP;AACH","file":"ProxyFactory.js","sourcesContent":["class ProxyFactory {\n\n    static create(objeto, props, acao) {\n\n        return new Proxy(objeto, {\n\n            get: function (target, prop, receiver) {\n\n                if (props.includes(prop) && ProxyFactory._ehFuncao(target[prop])) {\n\n                    // trocar o meu método do Proxy por outro método\n                    return function () {\n                        // Tem que ser function para ter o this dinâmico. \n                        //Não pode ser arrow function que possui escopo léxico.\n                        console.log(`a propriedade \"${prop}\" foi interceptada`);\n                        let retorno = Reflect.apply(target[prop], target, arguments);\n                        acao(target);\n                        return retorno;\n                    };\n                }\n                return Reflect.get(target, prop, receiver);\n            },\n\n            set(target, prop, value, receiver){\n\n                let retorno = Reflect.set(target, prop, value, receiver);\n                if(props.includes(prop)){\n                    // target[prop] = value;\n                    acao(target);\n                }\n                \n                return retorno;\n            }\n        });\n    }\n\n    static _ehFuncao(func) {\n        return typeof(func) == typeof(Function);\n    }\n}"]}